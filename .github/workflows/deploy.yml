name: 'Deploy'

on:
  push:
    branches:
     - next

jobs:
  dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: ./.github/actions/pnpm
      id: pnpm-cache

    - name: install dependencies
      if: steps.pnpm-cache.outputs.cache-hit != 'true'
      run: pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

  changes:
    runs-on: ubuntu-latest

    outputs:
      packages: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            package1: 'packages/package1/**'
            package2: 'packages/package2/**'
            package3: 'packages/package3/**'

  package1:
    needs: [dependencies, changes]
    runs-on: ubuntu-latest

    steps:
      - run: echo ${{ contains(needs.changes.packages, package1) }}
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/package1

  package2:
    needs: [dependencies, changes]
    if: ${{ contains(needs.changes.packages, 'package2') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/package2

  package3:
    needs: [dependencies, changes]
    if: ${{ contains(needs.changes.packages, 'package3') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/package3
